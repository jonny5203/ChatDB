services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka-broker
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-broker:9093'
      KAFKA_CLUSTER_ID: 'MkU1OEE1RjYtQ0U4MS00MzZCLUIxREItMjczM0VFRjFGRkE2'
    healthcheck:
      test: ["CMD", "bash", "-c", "exec 3<>/dev/tcp/localhost/9092"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 40s

  kafka-setup:
    image: apache/kafka:latest
    container_name: kafka-setup
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [
      "/bin/sh",
      "-c",
      "echo 'Waiting for Kafka to be ready...';       while ! /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-broker:9092 --list; do         echo 'Still waiting for Kafka...';         sleep 2;       done;       echo 'Kafka is ready! Creating topics...';       /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-broker:9092 --partitions 4 --replication-factor 1 --topic queries &&       /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-broker:9092 --partitions 4 --replication-factor 1 --topic predictions &&       /opt/kafka/bin/kafka-topics.sh --create --if-not-exists --bootstrap-server kafka-broker:9092 --partitions 4 --replication-factor 1 --topic training_jobs &&       echo 'Topics created successfully.'"
    ]

  training-orchestrator:
    build: ../training-orchestrator
    container_name: training-orchestrator
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/db
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker:9092
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  kafka_data:
  postgres_data: